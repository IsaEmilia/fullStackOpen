{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\isahanni\\\\Documents\\\\GitHub\\\\fullStackOpen\\\\part1\\\\Unicafe\\\\src\\\\index.js\";\nimport React, { useState } from 'react';\nimport ReactDOM from 'react-dom';\n\nconst Stats = props => {\n  const good = props.good;\n  const bad = props.bad;\n  const neutral = props.neutral;\n  const sum = props.good + props.bad + props.neutral;\n  const average = \"fuck average\";\n  const positive = props.good / (props.good + props.neutral + props.bad) * 100;\n\n  if (!good && !neutral && !bad) {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 16,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(\"p\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 17,\n        columnNumber: 9\n      }\n    }, \"No feedback given\"));\n  }\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 7\n    }\n  }, \"Good: \", good), /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 7\n    }\n  }, \"Neutral: \", neutral), /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 7\n    }\n  }, \"Bad: \", bad), /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 7\n    }\n  }, \"All: \", sum), /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 7\n    }\n  }, \"Positive: \", positive), /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 7\n    }\n  }, \"Average: \", average));\n};\n\nconst App = () => {\n  // save clicks of each button to own state\n  const [good, setGood] = useState(0);\n  const [neutral, setNeutral] = useState(0);\n  const [bad, setBad] = useState(0);\n\n  const Button = props => /*#__PURE__*/React.createElement(\"button\", {\n    onClick: props.handleClick,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 5\n    }\n  }, props.text);\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"h1\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 7\n    }\n  }, \"Give feedback \"), /*#__PURE__*/React.createElement(Button, {\n    handleClick: () => setGood(good + 1),\n    text: \"Good\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(Button, {\n    handleClick: () => setNeutral(neutral + 1),\n    text: \"Neutral\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(Button, {\n    handleClick: () => setBad(bad + 1),\n    text: \"Bad\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(\"hr\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(\"h1\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 7\n    }\n  }, \"Stats\"), /*#__PURE__*/React.createElement(Stats, {\n    good: good,\n    neutral: neutral,\n    bad: bad,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 7\n    }\n  }));\n};\n\nReactDOM.render( /*#__PURE__*/React.createElement(App, {\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 62,\n    columnNumber: 17\n  }\n}), document.getElementById('root'));","map":{"version":3,"sources":["C:/Users/isahanni/Documents/GitHub/fullStackOpen/part1/Unicafe/src/index.js"],"names":["React","useState","ReactDOM","Stats","props","good","bad","neutral","sum","average","positive","App","setGood","setNeutral","setBad","Button","handleClick","text","render","document","getElementById"],"mappings":"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","sourcesContent":["import React, { useState } from 'react'\r\nimport ReactDOM from 'react-dom'\r\n\r\nconst Stats = (props) => {\r\n\r\n\r\n  const good = props.good\r\n  const bad = props.bad\r\n  const neutral = props.neutral\r\n  const sum = props.good + props.bad + props.neutral\r\n  const average = \"fuck average\"\r\n  const positive = (props.good / (props.good + props.neutral + props.bad)) * 100\r\n\r\n  if(!good && !neutral && !bad){\r\n    return(\r\n      <div>\r\n        <p>No feedback given</p>\r\n      </div>\r\n    )\r\n  }\r\n\r\n  return (\r\n    <div>\r\n      <p>Good: {good}</p>\r\n      <p>Neutral: {neutral}</p>\r\n      <p>Bad: {bad}</p>\r\n      <p>All: {sum}</p>\r\n      <p>Positive: {positive}</p> \r\n      <p>Average: {average}</p>\r\n    </div>\r\n  )\r\n}\r\n\r\n\r\nconst App = () => {\r\n  // save clicks of each button to own state\r\n  const [good, setGood] = useState(0)\r\n  const [neutral, setNeutral] = useState(0)\r\n  const [bad, setBad] = useState(0)\r\n\r\n  const Button = (props) => (\r\n    <button onClick={props.handleClick}>\r\n      {props.text}\r\n    </button>\r\n  )\r\n\r\n  \r\n\r\n  return (\r\n    <div>\r\n      <h1>Give feedback </h1>\r\n      <Button handleClick={() => setGood(good +1) } text=\"Good\"/>\r\n      <Button handleClick={() => setNeutral(neutral +1)} text=\"Neutral\"/>\r\n      <Button handleClick={() => setBad(bad +1)} text=\"Bad\"/>\r\n      <hr></hr>\r\n      <h1>Stats</h1>\r\n      <Stats good={good} neutral={neutral} bad={bad} />\r\n    </div>\r\n  )\r\n}\r\n\r\nReactDOM.render(<App />, \r\n  document.getElementById('root')\r\n)"]},"metadata":{},"sourceType":"module"}