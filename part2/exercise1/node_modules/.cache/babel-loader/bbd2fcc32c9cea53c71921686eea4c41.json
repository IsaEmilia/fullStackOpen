{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\isahanni\\\\Documents\\\\GitHub\\\\fullStackOpen\\\\part2\\\\exercise1\\\\src\\\\index.js\";\nimport React, { useState } from 'react';\nimport ReactDOM from 'react-dom';\n\nconst App = () => {\n  const [persons, setPersons] = useState([{\n    content: 'Name Example',\n    id: 0\n  }]);\n  const [newName, setNewName] = useState(['']);\n  const [newNumber, setNewNumber] = useState(['']);\n\n  const NameList = () => {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 14,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(\"ul\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 15,\n        columnNumber: 7\n      }\n    }, persons.map(name => /*#__PURE__*/React.createElement(\"li\", {\n      key: name.id,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 17,\n        columnNumber: 11\n      }\n    }, name.content))));\n  };\n\n  const addPerson = event => {\n    event.preventDefault();\n    const nameObject = {\n      content: newName,\n      number: newNumber,\n      id: persons.length + 1\n    };\n\n    if (newName == setPersons) {\n      alert(`${newName} is already added`);\n      return null;\n    }\n\n    if (newName === '') {\n      return null;\n    }\n\n    setPersons(persons.concat(nameObject));\n    setNewName(\"\");\n  };\n\n  const handleNameChange = event => {\n    console.log(event.target.value);\n    setNewName(event.target.value);\n  };\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"h2\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 7\n    }\n  }, \"Phonebook\"), /*#__PURE__*/React.createElement(\"form\", {\n    onSubmit: addPerson,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 7\n    }\n  }, \"name:\", /*#__PURE__*/React.createElement(\"input\", {\n    value: newName,\n    onChange: handleNameChange,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(\"button\", {\n    type: \"submit\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 9\n    }\n  }, \"add\")), /*#__PURE__*/React.createElement(\"h2\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 7\n    }\n  }, \"Numbers\"), /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 3\n    }\n  }, /*#__PURE__*/React.createElement(NameList, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 5\n    }\n  })));\n};\n\nReactDOM.render( /*#__PURE__*/React.createElement(App, {\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 75,\n    columnNumber: 17\n  }\n}), document.getElementById('root'));","map":{"version":3,"sources":["C:/Users/isahanni/Documents/GitHub/fullStackOpen/part2/exercise1/src/index.js"],"names":["React","useState","ReactDOM","App","persons","setPersons","content","id","newName","setNewName","newNumber","setNewNumber","NameList","map","name","addPerson","event","preventDefault","nameObject","number","length","alert","concat","handleNameChange","console","log","target","value","render","document","getElementById"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,OAAOC,QAAP,MAAqB,WAArB;;AAEA,MAAMC,GAAG,GAAG,MAAM;AAChB,QAAM,CAAEC,OAAF,EAAWC,UAAX,IAA0BJ,QAAQ,CAAC,CACvC;AAAEK,IAAAA,OAAO,EAAE,cAAX;AAA2BC,IAAAA,EAAE,EAAE;AAA/B,GADuC,CAAD,CAAxC;AAGA,QAAM,CAAEC,OAAF,EAAWC,UAAX,IAA0BR,QAAQ,CAAC,CAAC,EAAD,CAAD,CAAxC;AACA,QAAM,CAAES,SAAF,EAAaC,YAAb,IAA6BV,QAAQ,CAAC,CAAC,EAAD,CAAD,CAA3C;;AAGA,QAAMW,QAAQ,GAAG,MAAM;AACrB,wBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACGR,OAAO,CAACS,GAAR,CAAYC,IAAI,iBACf;AAAI,MAAA,GAAG,EAAEA,IAAI,CAACP,EAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAoBO,IAAI,CAACR,OAAzB,CADD,CADH,CADA,CADF;AASD,GAVD;;AAYA,QAAMS,SAAS,GAAIC,KAAD,IAAW;AAE3BA,IAAAA,KAAK,CAACC,cAAN;AACC,UAAMC,UAAU,GAAG;AACjBZ,MAAAA,OAAO,EAAEE,OADQ;AAEjBW,MAAAA,MAAM,EAAET,SAFS;AAGjBH,MAAAA,EAAE,EAAEH,OAAO,CAACgB,MAAR,GAAiB;AAHJ,KAAnB;;AAMD,QAAIZ,OAAO,IAAIH,UAAf,EAA2B;AACzBgB,MAAAA,KAAK,CAAE,GAAEb,OAAQ,mBAAZ,CAAL;AACA,aACE,IADF;AAGD;;AACD,QAAGA,OAAO,KAAG,EAAb,EAAgB;AACd,aACE,IADF;AAGD;;AAEDH,IAAAA,UAAU,CAACD,OAAO,CAACkB,MAAR,CAAeJ,UAAf,CAAD,CAAV;AACAT,IAAAA,UAAU,CAAC,EAAD,CAAV;AACD,GAvBD;;AAyBA,QAAMc,gBAAgB,GAAIP,KAAD,IAAW;AAClCQ,IAAAA,OAAO,CAACC,GAAR,CAAYT,KAAK,CAACU,MAAN,CAAaC,KAAzB;AACAlB,IAAAA,UAAU,CAACO,KAAK,CAACU,MAAN,CAAaC,KAAd,CAAV;AACD,GAHD;;AAKA,sBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iBADF,eAGE;AAAM,IAAA,QAAQ,EAAEZ,SAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,2BAEE;AAAO,IAAA,KAAK,EAAEP,OAAd;AACO,IAAA,QAAQ,EAAEe,gBADjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFF,eAIE;AAAQ,IAAA,IAAI,EAAC,QAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WAJF,CAHF,eAUE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,eAVF,eAYF;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,QAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,CAZE,CADF;AAmBD,CArED;;AAuEArB,QAAQ,CAAC0B,MAAT,eAAgB,oBAAC,GAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EAAhB,EACEC,QAAQ,CAACC,cAAT,CAAwB,MAAxB,CADF","sourcesContent":["import React, { useState } from 'react'\r\nimport ReactDOM from 'react-dom'\r\n\r\nconst App = () => {\r\n  const [ persons, setPersons ] = useState([\r\n    { content: 'Name Example', id: 0 }\r\n    ]) \r\n  const [ newName, setNewName ] = useState([''])\r\n  const [ newNumber, setNewNumber] = useState([''])\r\n\r\n\r\n  const NameList = () => {\r\n    return(\r\n      <div>\r\n      <ul>\r\n        {persons.map(name => \r\n          <li key={name.id} >{name.content}</li> \r\n        )} \r\n      </ul> \r\n      </div>\r\n    )\r\n  } \r\n\r\n  const addPerson = (event) => {\r\n    \r\n    event.preventDefault()\r\n     const nameObject = {\r\n       content: newName,\r\n       number: newNumber,\r\n       id: persons.length + 1,\r\n    }\r\n\r\n    if (newName == setPersons) {\r\n      alert(`${newName} is already added`)\r\n      return(\r\n        null\r\n      )\r\n    } \r\n    if(newName===''){\r\n      return(\r\n        null\r\n      )\r\n    }\r\n\r\n    setPersons(persons.concat(nameObject))\r\n    setNewName(\"\")\r\n  }\r\n  \r\n  const handleNameChange = (event) => {\r\n    console.log(event.target.value)\r\n    setNewName(event.target.value)\r\n  }\r\n\r\n  return (\r\n    <div>\r\n      <h2>Phonebook</h2>\r\n\r\n      <form onSubmit={addPerson}>\r\n        name:  \r\n        <input value={newName} \r\n               onChange={handleNameChange}/>\r\n        <button type=\"submit\">add</button>\r\n      </form>\r\n      \r\n      <h2>Numbers</h2>\r\n\r\n  <div>\r\n    <NameList />\r\n  </div>\r\n      \r\n    </div>\r\n  )\r\n}\r\n\r\nReactDOM.render(<App />, \r\n  document.getElementById('root')\r\n)"]},"metadata":{},"sourceType":"module"}